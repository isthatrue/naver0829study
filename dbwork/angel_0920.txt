-- angel 계정 연습
-- 전체 시퀀스 조회
SELECT * FROM SEQ;
SELECT * FROM TEST;

-- sequence 생성
create SEQUENCE seq1 start with 1 INCREMENT by 1;   -- 1부터 1씩 증가되는 시퀀스 생성
create SEQUENCE seq2 start with 5 INCREMENT by 3 NOCACHE;   -- 5부터 3씩증가, cahce 값은 0
create SEQUENCE seq3 MAXVALUE 100 NOCACHE;

-- 값 발생시키기
SELECT seq1.NEXTVAL, seq2.NEXTVAL, seq3.NEXTVAL FROM DUAL;

-- SEQUENCE 삭제
DROP SEQUENCE seq1;
DROP SEQUENCE seq2;
DROP SEQUENCE seq3;

-- 새로운 시퀀스 하나 생성
CREATE SEQUENCE seq_test NOCACHE;

-- table 생성
CREATE TABLE TEST(
    num number(3) primary key,
    name varchar2(20) not null,
    blood char(2) default 'A',
    weight number(5,2),
    birthday date);
 
 -- 데이터 추가
 -- 일부 데이터만 넣는 경우 컬럼명을 반드시 표기한다
 INSERT INTO TEST (NUM, NAME) VALUES (seq_test.NEXTVAL, '캔디');
 
 -- 순서대로 모든 컬럼값을 넣는 경우 컬럼명 생략 가능
 INSERT INTO TEST VALUES (seq_test.NEXTVAL, '캐서린', 'AB', 67.89, sysdate);
 
 -- 제약 조건에 안맞는 경우 오류 확인
 INSERT INTO TEST(NUM, BLOOD) VALUES (seq_test.NEXTVAL, '0');
 INSERT INTO TEST(NUM, NAME, BLOOD) VALUES (2, 'Lee', '0');
 
 -- 제대로 된 데이터 3개 정도만 추가하기
 INSERT INTO TEST VALUES (seq_test.NEXTVAL, '강호동', 'B', 78.9, '2000-10-10');
 INSERT INTO TEST VALUES (seq_test.NEXTVAL, '유재석', 'A', 76.45, '1979-12-25');
 INSERT INTO TEST VALUES (seq_test.NEXTVAL, '이영자', 'O', 77.77, '1969-09-09');
 
 
 -- rollback;  -- 마지막 commit 한 이후 SQL문 (DML:INSERT, DELETE, UPDATE) 모두 취소
 commit; -- 더 이상 rollback 안됨
 

 INSERT INTO TEST VALUES (seq_test.NEXTVAL, '김말동', 'B', 56.78, '1989-09-09');
 
 -- 이 상태에서 rollback 하면 누가 취소될까?
 rollback;
 
 -- 수정, 강호동의 혈액형을 'AB'형으로 수정
 UPDATE TEST SET BLOOD = 'AB' WHERE name='강호동';
 
 -- 두 개의 컬럼 수정
 UPDATE TEST SET WEIGHT=80.8, BIRTHDAY=SYSDATE WHERE NUM=7;
 
 -- 삭제
 DELETE FROM TEST;  -- 모든 데이터가 삭제되므로 주의한다.
 rollback;
 
 -- num 이 7, 9, 10을 삭제하려면
 DELETE FROM TEST WHERE NUM IN (7, 9, 10);
 
 -- TABLE 제거
 DROP TABLE TEST;
 
 -- 시퀀스 제거
 DROP TABLE SEQ_TEST;
 ROLLBACK; -- DML (INSERT, DELETE, UPDATE 인 경우만 롤백이됨, DROP은 안됨)
 -----------------------------------------------------------------------
 CREATE TABLE PERSON (
        NUM NUMBER(3) CONSTRAINT PERSON_PK_NUM PRIMARY KEY,
        BLOOD CHAR(2));
        
SELECT * FROM PERSON;

-- 기존 제약조건 제거
ALTER TABLE PERSON DROP CONSTRAINT PERSON_PK_NUM;

-- 다시 PRIMARY KEY 에 대한 제약조건 추가
ALTER TABLE PERSON ADD CONSTRAINT PERSON_NUM_PK PRIMARY KEY(NUM);

-- BLLOD 에 대해서 CHECK 제약 조건 추가
ALTER TABLE PERSON ADD CONSTRAINT PERSON_CK_BLOOD CHECK (BLOOD IN ('A','B','O','AB'));

-- 데이터 추가 
INSERT INTO PERSON VALUES(1, 'A');
INSERT INTO PERSON VALUES(1, 'B');  -- 오류 : 무결성 제약 조건(ANGEL, PERSON_NUM_PK)에 위배됩니다.
INSERT INTO PERSON VALUES(2, 'b');  -- 오류 : 체크 제약 조건 (ANGEL.PERSON_CK_BLOOD)이 위배되었습니다.
INSERT INTO PERSON VALUES(2, 'O');

-- 컬럼을 추가 (ADD)
ALTER TABLE PERSON ADD NAME VARCHAR2(20);
ALTER TABLE PERSON ADD SCORE NUMBER(5,1) DEFAULT 30.5;

-- 컬럼명 제거 (DROP COLUNM)
ALTER TABLE PERSON DROP COLUMN NUM;

-- JAVA 라는 컬럼을 NUMBER 타입으로 추가 후 1~100 사이 값만 들어오도록 제약 조건 추가
ALTER TABLE PERSON ADD JAVA NUMBER(3) DEFAULT 0;
ALTER TABLE PERSON ADD CONSTRAINT PERSON_CK_JAVA CHECK (JAVA>=0 and JAVA <=100);

-- 컬럼명 변경 RENAME COLUMN
ALTER TABLE PERSOGN RENAME COLUMN JAVA to  SPRING;

-- 데이터 추가 시 컬럼 순서대로 주기 싫은 경우 컬럼명 주면됨.
INSERT INTO PERSON(NAME, BLOOD, SPRING, SCORE) VALUES('lee','O',90,35);

DROP TABLE PERSON;